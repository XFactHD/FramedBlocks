plugins {
    id 'java-library'
    id 'maven-publish'
    id 'net.neoforged.moddev' version '2.0.28-beta'
}

version = mod_version
group = 'xfacthd.framedblocks'

base {
    archivesName = 'FramedBlocks'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

neoForge {
    version = project.neoforge_version

    parchment {
        minecraftVersion = project.parchment_minecraft_version
        mappingsVersion = project.parchment_mappings_version
    }

    runs {
        configureEach {
            // systemProperty  'neoforge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            systemProperty 'neoforge.enabledGameTestNamespaces', 'framedblocks'

            logLevel = org.slf4j.event.Level.DEBUG
        }

        client {
            client()
            gameDirectory = project.file('run')
        }

        server {
            server()
            gameDirectory = project.file('run_server')

            programArgument '--nogui'
        }

        data {
            data()
            gameDirectory = project.file('run')

            programArguments.addAll(
                    '--mod', 'framedblocks',
                    '--all',
                    '--output', file('src/generated/resources/').getAbsolutePath(),
                    '--existing', file('src/main/resources/').getAbsolutePath(),
                    '--existing-mod', 'ae2'
            )
        }

        gameTestServer {
            type = "gameTestServer"
            gameDirectory = project.file('run_gametest')
        }
    }

    mods {
        framedblocks {
            sourceSet(project.sourceSets.main)
            sourceSet(project.sourceSets.test)
        }
    }
}

sourceSets {
    main.resources {
        srcDir 'src/generated/resources'
    }

    test {
        java {
            srcDir "src/test/java"
        }
        resources {
            srcDir "src/test/resources"
        }
    }
}

repositories {
    maven {
        name = 'CurseMaven'
        url = 'https://www.cursemaven.com'
        content {
            includeGroup('curse.maven')
        }
    }
    maven {
        name = "tterrag's maven"
        url = 'https://maven.tterrag.com/'
        content {
            includeGroup('team.chisel.ctm')
            includeGroup('com.tterrag.registrate')
            includeGroup('com.jozufozu.flywheel')
            includeGroup('com.simibubi.create')
        }
    }
    maven {
        name = "Jared's maven"
        url = 'https://maven.blamejared.com/'
        content {
            includeGroup('org.embeddedt')
            includeGroup('mezz.jei')
        }
    }
    maven {
        name = 'TerraformersMC maven'
        url = "https://maven.terraformersmc.com/"
        content {
            includeGroup('dev.emi')
        }
    }
    maven {
        name = "Shedaniel's maven"
        url = 'https://maven.shedaniel.me/'
        content {
            includeGroup('dev.architectury')
            includeGroup('me.shedaniel')
            includeGroup('me.shedaniel.cloth')
        }
    }
    maven {
        name = 'ResourcefulBees maven'
        url = 'https://maven.resourcefulbees.com/repository/maven-public/'
        content {
            includeGroup('com.teamresourceful')
            includeGroup('com.teamresourceful.resourcefullib')
            includeGroup('earth.terrarium.athena')
            includeGroup('earth.terrarium.chipped')
        }
    }
    maven {
        name = 'Modmaven'
        url = 'https://modmaven.dev/'
        content {
            includeGroup('appeng')
        }
    }
    maven {
        name = 'Shadows Maven'
        url = 'https://maven.shadowsoffire.dev/releases'
        content {
            includeGroup('snownee.jade')
        }
    }
    maven {
        name = "Fuzs Mod Resources"
        url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
        content {
            includeGroupByRegex('fuzs.*')
        }
    }
}

dependencies {
    // Only needed when DiagonalBlocks is switched to implementation
    //runtimeOnly("curse.maven:puzzleslib-495476:${puzzles_lib_coord}")
    compileOnly("fuzs.diagonalblocks:diagonalblocks-neoforge:${diag_blocks_version}")

    //compileOnly("curse.maven:buildinggadgets-298187:${buildinggadgets_coord}")

    compileOnly("earth.terrarium.athena:athena-neoforge-${athena_mc_version}:${athena_version}")
    //runtimeOnly("com.teamresourceful.resourcefullib:resourcefullib-neoforge-${resful_lib_mc_version}:${resful_lib_version}")
    //runtimeOnly("earth.terrarium.chipped:chipped-neoforge-${chipped_mc_version}:${chipped_version}")

    compileOnly("mezz.jei:jei-${jei_mc_version}-common-api:${jei_version}")
    compileOnly("mezz.jei:jei-${jei_mc_version}-neoforge-api:${jei_version}")
    runtimeOnly("mezz.jei:jei-${jei_mc_version}-neoforge:${jei_version}")

    // Switch Arch, Cloth and REI-neoforge to impl for runtime testing
    compileOnly("dev.architectury:architectury-neoforge:${arch_version}")
    compileOnly("me.shedaniel.cloth:cloth-config-neoforge:${cloth_version}")
    compileOnly("me.shedaniel:RoughlyEnoughItems-neoforge:${rei_version}")
    //runtimeOnly("curse.maven:reipc-521393:${reipc_coord}")
    compileOnly("me.shedaniel:RoughlyEnoughItems-api-neoforge:${rei_version}")
    compileOnly("me.shedaniel:RoughlyEnoughItems-default-plugin-neoforge:${rei_version}")
    compileOnly("me.shedaniel:REIPluginCompatibilities-forge-annotations:${reipcanno_version}")

    compileOnly("dev.emi:emi-neoforge:${emi_version}+${emi_mc_version}:api")
    //runtimeOnly("dev.emi:emi-neoforge:${emi_version}+${emi_mc_version}")

    compileOnly("curse.maven:modernfix-790626:${modernfix_coord}")

    //runtimeOnly("org.embeddedt:embeddium-${embeddium_mc_version}:${embeddium_version}+mc${embeddium_mc_version}")

    //compileOnly("com.simibubi.create:create-${create_mc_version}:${create_version}:slim") { transitive = false }
    //compileOnly("com.jozufozu.flywheel:flywheel-forge-${flywheel_mc_version}:${flywheel_version}")
    // Only needed when Create and/or Flywheel are switched to implementation
    //runtimeOnly("com.tterrag.registrate:Registrate:${registrate_version}")

    //compileOnly("curse.maven:moonlight-499980:${moonlight_coord}")
    //compileOnly("curse.maven:supplementaries-412082:${supplementaries_coord}")

    //implementation("curse.maven:guidebook-253874:${guidebook_coord}")

    compileOnly("appeng:appliedenergistics2:${ae2_version}:api")
    //runtimeOnly("appeng:appliedenergistics2:${ae2_version}")

    compileOnly("snownee.jade:Jade-NeoForge:${jade_mc_version}-${jade_version}")

    implementation("curse.maven:atlasviewer-633577:${atlasviewer_coord}")
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version: minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neoforge_version: neoforge_version,
            neoforge_version_range: neoforge_version_range,
            loader_version_range: loader_version_range,
            mod_version: mod_version,
            jei_version: jei_version,
            rei_version: rei_version,
            emi_version: emi_version,
            diag_blocks_version: diag_blocks_version,
            buildinggadgets_version: buildinggadgets_version,
            atlasviewer_version: atlasviewer_version,
            modernfix_version: modernfix_version,
            supplementaries_version: supplementaries_version,
            athena_version: athena_version,
            create_version: create_version,
            guidebook_version: guidebook_version,
            ae2_version: ae2_version
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties + [project: project]
    }
}

processTestResources {
    duplicatesStrategy(DuplicatesStrategy.INCLUDE)
}

publishing {
    publications {
        register ('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
