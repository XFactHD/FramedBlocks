buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = '5.11.5'
group = 'xfacthd.framedblocks'
archivesBaseName = 'FramedBlocks'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
//Print out JVM information so that we know what version is running. Extremely useful for people to know when helping you.
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: 'parchment', version: '2022.11.06-1.18.2'
    
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                framedblocks {
                    source sourceSets.main
                    source sourceSets.test
                }
            }
        }

        server {
            workingDirectory project.file('run_server')

            // Recommended logging data for a userdev environment
            // property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                framedblocks {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'framedblocks', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                framedblocks {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run_gametest')

            // Recommended logging data for a userdev environment
            // property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', 'framedblocks'

            mods {
                framedblocks {
                    source sourceSets.main
                    source sourceSets.test
                }
            }
        }
    }
}

sourceSets {
    main.resources {
        srcDir 'src/generated/resources'
    }

    test {
        java {
            srcDir "src/test/java"
        }
        resources {
            srcDir "src/test/resources"
        }
    }
}

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
    maven {
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    mavenCentral()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.1.92'

    compileOnly fg.deobf("curse.maven:ctm-267602:3737369")

    //runtimeOnly fg.deobf("curse.maven:puzzleslib-495476:3681966") //Only needed when Diagonal Fences is switched to implementation
    compileOnly fg.deobf("curse.maven:diagonalfences-458048:4567767")

    compileOnly fg.deobf("curse.maven:buildinggadgets-298187:3725903")

    compileOnly fg.deobf("curse.maven:nocubes-309664:3944354")

    compileOnly fg.deobf("mezz.jei:jei-1.18.2-common-api:10.2.1.1002")
    compileOnly fg.deobf("mezz.jei:jei-1.18.2-forge-api:10.2.1.1002")
    implementation fg.deobf("mezz.jei:jei-1.18.2-forge:10.2.1.1002")
    //runtimeOnly fg.deobf("mezz.jei:jei-1.18.2:9.7.2.266")

    runtimeOnly fg.deobf("curse.maven:spark-361579:3767286")

    //runtimeOnly fg.deobf("curse.maven:magnesium_sodium-532724:3556734")
    //runtimeOnly fg.deobf("curse.maven:rubidium_sodium-574856:3633735")

    compileOnly fg.deobf("curse.maven:flywheel-486392:3871082")
    compileOnly fg.deobf("curse.maven:create-328085:4547146")

    compileOnly fg.deobf("curse.maven:moonlight-499980:3842421")
    compileOnly fg.deobf("curse.maven:supplementaries-412082:3947959")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

mixin {
    add sourceSets.main, "framedblocks.refmap.json"
    config "framedblocks.mixin.json"
}

processTestResources {
    duplicatesStrategy(DuplicatesStrategy.INCLUDE)
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "framedblocks",
            "Specification-Vendor": "XFactHD",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${project.version}",
            "Implementation-Vendor" : "XFactHD",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "framedblocks.mixin.json"
        ])
    }
}

jar.finalizedBy('reobfJar') 

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
